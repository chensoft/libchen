language: cpp

matrix:
  include:
    - os: linux
      env: Linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      script:
        - mkdir build
        - cd build
        - export CC=gcc-5 && export CXX=g++-5
        - cmake -DENABLE_CODE_COVERAGE=ON ..
        - make -j
        - test/libchen-test
        - bash <(curl -s https://codecov.io/bash)

    - os: linux
      env: Android
      dist: trusty
      before_install:
        - echo $PWD
        - curl -L http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip -O
        - unzip -oq android-ndk-r10e-linux-x86_64.zip
        - export NDK_ROOT=$PWD/android-ndk-r10e
      script:
        - mkdir build
        - cd build
        - echo "need latest cmake(3.9+?) if you use ndk r16b+"
        - cmake -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=14 -DCMAKE_ANDROID_NDK=$NDK_ROOT -DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a -DCMAKE_ANDROID_STL_TYPE=c++_static ..
        - make -j

    - os: osx
      env: macOS
      osx_image: xcode8.3
      script:
        - mkdir build
        - cd build
        - cmake -G Xcode ..
        - xcodebuild -target libchen-test -project libchen.xcodeproj -configuration Debug
        - test/Debug/libchen-test

    - os: osx
      env: iOS
      osx_image: xcode8.3
      before_install:
        - echo $PWD
        - curl -L https://raw.githubusercontent.com/leetal/ios-cmake/master/ios.toolchain.cmake -O
        - export IOS_TOOLCHAIN=$PWD/ios.toolchain.cmake
      script:
        - mkdir build
        - cd build
        - cmake -DCMAKE_TOOLCHAIN_FILE=$IOS_TOOLCHAIN -DENABLE_BITCODE=NO -DIOS_PLATFORM=OS ..
        - make -j