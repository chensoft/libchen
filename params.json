{
  "name": "libchen",
  "tagline": "A General Purpose C++ Toolkit",
  "body": "# libchen\r\n\r\n[![Build Status](https://img.shields.io/travis/chensoft/libchen.svg?label=Linux%20Mac)](https://travis-ci.org/chensoft/libchen)\r\n[![Build status](https://img.shields.io/appveyor/ci/chensoft/libchen.svg?label=Windows)](https://ci.appveyor.com/project/chensoft/libchen)\r\n[![release](http://github-release-version.herokuapp.com/github/chensoft/libchen/release.svg?style=flat&refresh=0)](https://github.com/chensoft/libchen/releases/latest)\r\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/hyperium/hyper/master/LICENSE)\r\n\r\nlibchen is a general purpose C++ toolkit, it contains many useful and handy methods for creating complex software. It's cross-platform and released under the MIT License.\r\n\r\n## Platforms\r\n\r\n* OS X (clang++ 3.5+)\r\n* Linux (g++ 4.8.4+, clang++ 3.5+)\r\n* Windows (vs 2015+)\r\n* Android (ndk r10+)\r\n* iOS (xcode 7+)\r\n\r\nNotice that C++11's regex is incomplete on g++ 4.8.x, if you want to use it, you shall upgrade your compiler to the latest version.\r\n\r\n## Features\r\n\r\n* base - basic part\r\n    * str: string format, print, equality test, prefix & suffix, join, replace, trim and more\r\n    * utf8: check utf-8 string character count, retrieve sub string, check bom\r\n    * any: provide a wrapper to hold any type\r\n    * num: float equality test, integer swap, number to string, random number generator\r\n    * map: check key existence, retrieve all keys, all values, flip map's key and value\r\n    * vector: make unique, combine, intersect and difference\r\n    * regex: simple wrapper for regex match, replace and group\r\n* data - data parse\r\n\t* json: json file & string parser\r\n\t* ini: ini file & string parser\r\n* mt - multithreading\r\n\t* semaphore: C++11 semaphore support\r\n\t* threadpool: threadpool support, use std::future\r\n* sys - system operation\r\n\t* fs: dirname, basename, realpath, file exist and many filesystem related methods\r\n\t* sys: uuid generator\r\n\t* proc: create daemon easily, get process pid and kill process\r\n* time - time and date\r\n\t* time: simple timing class\r\n\t* date: thread-safe gmt & local time\r\n* tool - misc tools\r\n\t* log: simple logging system\r\n\t* cmd: modern command line parser\r\n\r\n## Compile\r\n\r\n### Method 1 - Via Source\r\n\r\nYou can directly add the source code to your project, the `include` folder contains the headers, the `src` folder contains the source code. Don't add `sample ` and `test` folders, they are the test code.\r\n\r\nPlease note that the `src/plat` folder contains some platform dependent code, if you use Unix-like os, just add the `src/plat/unix` folder, exclude others. If you use Windows, add the `src/plat/win` folder only.\r\n\r\n### Method 2 - Via Library\r\n\r\nIf you want to compile it to a library, the easiest way is using CMake:\r\n\r\n```\r\ngit clone https://github.com/chensoft/libchen.git\r\ncd libchen\r\nmkdir build\r\ncd build\r\n\r\ncmake ..\r\nmake\r\n```\r\n\r\nIf no errors, a static library named `libchen.a` is generated in the `build` folder.\r\n\r\nThe default static library has debug info, if you want to build a release library, simply change the build type and compile again:\r\n\r\n```\r\ncmake -DCMAKE_BUILD_TYPE=Release ..\r\nmake\r\n```\r\n\r\n## License\r\n\r\nlibchen is released under the MIT License. See the LICENSE file for more information.\r\n\r\n## Contact\r\n\r\nYou can contact me by email: admin@chensoft.com.\r\n\r\n—————————(○^～^○)我只是一条分割线(○^～^○)—————————\r\n\r\n这个项目是我平时的一些代码积累，你也可以认为是在重复造轮子，这样说也没错。我认为造轮子能让我对某个功能有更深入的了解，而不仅仅是停留在会用的层面上，而且如果哪天我做的东西能被更多人使用，何乐而不为？\r\n\r\n这里也没有什么高深莫测的代码，一切以实用为主，我尽可能的保证代码的准确和高效，但没法保证一定会比别人写的更快更好。当然，做的更好是我永远追求的目标。\r\n\r\n关于库的稳定性，在库的小版本升级时，比如从1.0.0到1.1.0，大部分都会是内部实现的变动，API接口可能会有很少量的修改。但如果是大版本变更，比如从1.0.0到2.0.0，那很可能变动的东西会比较多。\r\n\r\n本人有强迫症，如果我哪天看某个类名或函数名不舒服，我很可能会换个更简短的名字，如果因为这个对你造成困扰，请谅解。另外一方面，对于一个已经存在的功能，我不会轻易删除，所以这方面大可放心。\r\n\r\n最后我非常欢迎能得到你的反馈，有什么问题，不管是抱怨还是建议，都可以发送到我邮箱：admin@chensoft.com。",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}